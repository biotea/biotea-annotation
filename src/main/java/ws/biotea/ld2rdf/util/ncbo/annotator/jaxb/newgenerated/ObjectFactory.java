//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.12.18 at 10:14:10 PM GMT 
//


package ws.biotea.ld2rdf.util.ncbo.annotator.jaxb.newgenerated;

import java.math.BigInteger;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Id_QNAME = new QName("", "id");
    private final static QName _To_QNAME = new QName("", "to");
    private final static QName _Text_QNAME = new QName("", "text");
    private final static QName _MatchType_QNAME = new QName("", "matchType");
    private final static QName _From_QNAME = new QName("", "from");
    private final static QName _H1_QNAME = new QName("", "h1");
    private final static QName _Type_QNAME = new QName("", "type");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }
    
    /**
     * Create an instance of {@link Empty }
     * 
     */
    public Empty createEmpty() {
        return new Empty();
    }

    /**
     * Create an instance of {@link MappingsCollection }
     * 
     */
    public MappingsCollection createMappingsCollection() {
        return new MappingsCollection();
    }

    /**
     * Create an instance of {@link Annotation }
     * 
     */
    public Annotation createAnnotation() {
        return new Annotation();
    }

    /**
     * Create an instance of {@link Self }
     * 
     */
    public Self createSelf() {
        return new Self();
    }

    /**
     * Create an instance of {@link AnnotationsCollection }
     * 
     */
    public AnnotationsCollection createAnnotationsCollection() {
        return new AnnotationsCollection();
    }

    /**
     * Create an instance of {@link Ancestors }
     * 
     */
    public Ancestors createAncestors() {
        return new Ancestors();
    }

    /**
     * Create an instance of {@link Tree }
     * 
     */
    public Tree createTree() {
        return new Tree();
    }

    /**
     * Create an instance of {@link AnnotationCollection }
     * 
     */
    public AnnotationCollection createAnnotationCollection() {
        return new AnnotationCollection();
    }

    /**
     * Create an instance of {@link HierarchyCollection }
     * 
     */
    public HierarchyCollection createHierarchyCollection() {
        return new HierarchyCollection();
    }

    /**
     * Create an instance of {@link Parents }
     * 
     */
    public Parents createParents() {
        return new Parents();
    }

    /**
     * Create an instance of {@link Links }
     * 
     */
    public Links createLinks() {
        return new Links();
    }

    /**
     * Create an instance of {@link Children }
     * 
     */
    public Children createChildren() {
        return new Children();
    }

    /**
     * Create an instance of {@link Descendants }
     * 
     */
    public Descendants createDescendants() {
        return new Descendants();
    }

    /**
     * Create an instance of {@link Annotations }
     * 
     */
    public Annotations createAnnotations() {
        return new Annotations();
    }

    /**
     * Create an instance of {@link AnnotatedClass }
     * 
     */
    public AnnotatedClass createAnnotatedClass() {
        return new AnnotatedClass();
    }

    /**
     * Create an instance of {@link LinksCollection }
     * 
     */
    public LinksCollection createLinksCollection() {
        return new LinksCollection();
    }

    /**
     * Create an instance of {@link Mappings }
     * 
     */
    public Mappings createMappings() {
        return new Mappings();
    }

    /**
     * Create an instance of {@link Notes }
     * 
     */
    public Notes createNotes() {
        return new Notes();
    }

    /**
     * Create an instance of {@link Ontology }
     * 
     */
    public Ontology createOntology() {
        return new Ontology();
    }

    /**
     * Create an instance of {@link Ui }
     * 
     */
    public Ui createUi() {
        return new Ui();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "id")
    public JAXBElement<String> createId(String value) {
        return new JAXBElement<String>(_Id_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "to")
    public JAXBElement<BigInteger> createTo(BigInteger value) {
        return new JAXBElement<BigInteger>(_To_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "text")
    public JAXBElement<String> createText(String value) {
        return new JAXBElement<String>(_Text_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "matchType")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createMatchType(String value) {
        return new JAXBElement<String>(_MatchType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "from")
    public JAXBElement<BigInteger> createFrom(BigInteger value) {
        return new JAXBElement<BigInteger>(_From_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "h1")
    public JAXBElement<String> createH1(String value) {
        return new JAXBElement<String>(_H1_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "type")
    public JAXBElement<String> createType(String value) {
        return new JAXBElement<String>(_Type_QNAME, String.class, null, value);
    }

}
