//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.10.29 at 08:42:42 PM BST 
//


package ws.biotea.ld2rdf.util.ncbo.annotator.jaxb.generated;

import java.math.BigInteger;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _IsPreferred_QNAME = new QName("", "isPreferred");
    private final static QName _To_QNAME = new QName("", "to");
    private final static QName _IsDirect_QNAME = new QName("", "isDirect");
    private final static QName _WithSynonyms_QNAME = new QName("", "withSynonyms");
    private final static QName _IsTopLevel_QNAME = new QName("", "isTopLevel");
    private final static QName _LongestOnly_QNAME = new QName("", "longestOnly");
    private final static QName _Score_QNAME = new QName("", "score");
    private final static QName _From_QNAME = new QName("", "from");
    private final static QName _Version_QNAME = new QName("", "version");
    private final static QName _Id_QNAME = new QName("", "id");
    private final static QName _FullId_QNAME = new QName("", "fullId");
    private final static QName _IsStopWordsCaseSenstive_QNAME = new QName("", "isStopWordsCaseSenstive");
    private final static QName _ResultID_QNAME = new QName("", "resultID");
    private final static QName _Description_QNAME = new QName("", "description");
    private final static QName _FilterNumber_QNAME = new QName("", "filterNumber");
    private final static QName _Name_QNAME = new QName("", "name");
    private final static QName _NbAnnotation_QNAME = new QName("", "nbAnnotation");
    private final static QName _MappingType_QNAME = new QName("", "mappingType");
    private final static QName _ContextName_QNAME = new QName("", "contextName");
    private final static QName _LocalConceptId_QNAME = new QName("", "localConceptId");
    private final static QName _PreferredName_QNAME = new QName("", "preferredName");
    private final static QName _OutputFormat_QNAME = new QName("", "outputFormat");
    private final static QName _WithContext_QNAME = new QName("", "withContext");
    private final static QName _AccessDate_QNAME = new QName("", "accessDate");
    private final static QName _IsVirtualOntologyId_QNAME = new QName("", "isVirtualOntologyId");
    private final static QName _VirtualOntologyId_QNAME = new QName("", "virtualOntologyId");
    private final static QName _SemanticType_QNAME = new QName("", "semanticType");
    private final static QName _AccessedResource_QNAME = new QName("", "accessedResource");
    private final static QName _LocalOntologyId_QNAME = new QName("", "localOntologyId");
    private final static QName _WithDefaultStopWords_QNAME = new QName("", "withDefaultStopWords");
    private final static QName _String_QNAME = new QName("", "string");
    private final static QName _TextToAnnotate_QNAME = new QName("", "textToAnnotate");
    private final static QName _WholeWordOnly_QNAME = new QName("", "wholeWordOnly");
    private final static QName _LevelMax_QNAME = new QName("", "levelMax");
    private final static QName _MinTermSize_QNAME = new QName("", "minTermSize");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link AnnotationBean }
     * 
     */
    public AnnotationBean createAnnotationBean() {
        return new AnnotationBean();
    }

    /**
     * Create an instance of {@link OntologiesToKeepInResult }
     * 
     */
    public OntologiesToKeepInResult createOntologiesToKeepInResult() {
        return new OntologiesToKeepInResult();
    }

    /**
     * Create an instance of {@link Success }
     * 
     */
    public Success createSuccess() {
        return new Success();
    }

    /**
     * Create an instance of {@link Ontologies }
     * 
     */
    public Ontologies createOntologies() {
        return new Ontologies();
    }

    /**
     * Create an instance of {@link Annotations }
     * 
     */
    public Annotations createAnnotations() {
        return new Annotations();
    }

    /**
     * Create an instance of {@link Statistics }
     * 
     */
    public Statistics createStatistics() {
        return new Statistics();
    }

    /**
     * Create an instance of {@link AnnotatorResultBean }
     * 
     */
    public AnnotatorResultBean createAnnotatorResultBean() {
        return new AnnotatorResultBean();
    }

    /**
     * Create an instance of {@link StopWords }
     * 
     */
    public StopWords createStopWords() {
        return new StopWords();
    }

    /**
     * Create an instance of {@link Synonyms }
     * 
     */
    public Synonyms createSynonyms() {
        return new Synonyms();
    }

    /**
     * Create an instance of {@link Context }
     * 
     */
    public Context createContext() {
        return new Context();
    }

    /**
     * Create an instance of {@link SemanticTypes }
     * 
     */
    public SemanticTypes createSemanticTypes() {
        return new SemanticTypes();
    }

    /**
     * Create an instance of {@link Data }
     * 
     */
    public Data createData() {
        return new Data();
    }

    /**
     * Create an instance of {@link OntologyUsedBean }
     * 
     */
    public OntologyUsedBean createOntologyUsedBean() {
        return new OntologyUsedBean();
    }

    /**
     * Create an instance of {@link MappingTypes }
     * 
     */
    public MappingTypes createMappingTypes() {
        return new MappingTypes();
    }

    /**
     * Create an instance of {@link Parameters }
     * 
     */
    public Parameters createParameters() {
        return new Parameters();
    }

    /**
     * Create an instance of {@link Definitions }
     * 
     */
    public Definitions createDefinitions() {
        return new Definitions();
    }

    /**
     * Create an instance of {@link StatisticsBean }
     * 
     */
    public StatisticsBean createStatisticsBean() {
        return new StatisticsBean();
    }

    /**
     * Create an instance of {@link Concept }
     * 
     */
    public Concept createConcept() {
        return new Concept();
    }

    /**
     * Create an instance of {@link OntologiesToExpand }
     * 
     */
    public OntologiesToExpand createOntologiesToExpand() {
        return new OntologiesToExpand();
    }

    /**
     * Create an instance of {@link MappedConcept }
     * 
     */
    public MappedConcept createMappedConcept() {
        return new MappedConcept();
    }

    /**
     * Create an instance of {@link Term }
     * 
     */
    public Term createTerm() {
        return new Term();
    }

    /**
     * Create an instance of {@link SemanticTypeBean }
     * 
     */
    public SemanticTypeBean createSemanticTypeBean() {
        return new SemanticTypeBean();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isPreferred")
    public JAXBElement<BigInteger> createIsPreferred(BigInteger value) {
        return new JAXBElement<BigInteger>(_IsPreferred_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "to")
    public JAXBElement<BigInteger> createTo(BigInteger value) {
        return new JAXBElement<BigInteger>(_To_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isDirect")
    public JAXBElement<Boolean> createIsDirect(Boolean value) {
        return new JAXBElement<Boolean>(_IsDirect_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "withSynonyms")
    public JAXBElement<Boolean> createWithSynonyms(Boolean value) {
        return new JAXBElement<Boolean>(_WithSynonyms_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isTopLevel")
    public JAXBElement<BigInteger> createIsTopLevel(BigInteger value) {
        return new JAXBElement<BigInteger>(_IsTopLevel_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "longestOnly")
    public JAXBElement<Boolean> createLongestOnly(Boolean value) {
        return new JAXBElement<Boolean>(_LongestOnly_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "score")
    public JAXBElement<BigInteger> createScore(BigInteger value) {
        return new JAXBElement<BigInteger>(_Score_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "from")
    public JAXBElement<BigInteger> createFrom(BigInteger value) {
        return new JAXBElement<BigInteger>(_From_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "version")
    public JAXBElement<String> createVersion(String value) {
        return new JAXBElement<String>(_Version_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "id")
    public JAXBElement<BigInteger> createId(BigInteger value) {
        return new JAXBElement<BigInteger>(_Id_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "fullId")
    public JAXBElement<String> createFullId(String value) {
        return new JAXBElement<String>(_FullId_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isStopWordsCaseSenstive")
    public JAXBElement<Boolean> createIsStopWordsCaseSenstive(Boolean value) {
        return new JAXBElement<Boolean>(_IsStopWordsCaseSenstive_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "resultID")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createResultID(String value) {
        return new JAXBElement<String>(_ResultID_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "description")
    public JAXBElement<String> createDescription(String value) {
        return new JAXBElement<String>(_Description_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "filterNumber")
    public JAXBElement<Boolean> createFilterNumber(Boolean value) {
        return new JAXBElement<Boolean>(_FilterNumber_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "nbAnnotation")
    public JAXBElement<BigInteger> createNbAnnotation(BigInteger value) {
        return new JAXBElement<BigInteger>(_NbAnnotation_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "mappingType")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createMappingType(String value) {
        return new JAXBElement<String>(_MappingType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "contextName")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createContextName(String value) {
        return new JAXBElement<String>(_ContextName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "localConceptId")
    public JAXBElement<String> createLocalConceptId(String value) {
        return new JAXBElement<String>(_LocalConceptId_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "preferredName")
    public JAXBElement<String> createPreferredName(String value) {
        return new JAXBElement<String>(_PreferredName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "outputFormat")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createOutputFormat(String value) {
        return new JAXBElement<String>(_OutputFormat_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "withContext")
    public JAXBElement<Boolean> createWithContext(Boolean value) {
        return new JAXBElement<Boolean>(_WithContext_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "accessDate")
    public JAXBElement<String> createAccessDate(String value) {
        return new JAXBElement<String>(_AccessDate_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isVirtualOntologyId")
    public JAXBElement<Boolean> createIsVirtualOntologyId(Boolean value) {
        return new JAXBElement<Boolean>(_IsVirtualOntologyId_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "virtualOntologyId")
    public JAXBElement<BigInteger> createVirtualOntologyId(BigInteger value) {
        return new JAXBElement<BigInteger>(_VirtualOntologyId_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "semanticType")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createSemanticType(String value) {
        return new JAXBElement<String>(_SemanticType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "accessedResource")
    public JAXBElement<String> createAccessedResource(String value) {
        return new JAXBElement<String>(_AccessedResource_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "localOntologyId")
    public JAXBElement<BigInteger> createLocalOntologyId(BigInteger value) {
        return new JAXBElement<BigInteger>(_LocalOntologyId_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "withDefaultStopWords")
    public JAXBElement<Boolean> createWithDefaultStopWords(Boolean value) {
        return new JAXBElement<Boolean>(_WithDefaultStopWords_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "string")
    public JAXBElement<String> createString(String value) {
        return new JAXBElement<String>(_String_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "textToAnnotate")
    public JAXBElement<String> createTextToAnnotate(String value) {
        return new JAXBElement<String>(_TextToAnnotate_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "wholeWordOnly")
    public JAXBElement<Boolean> createWholeWordOnly(Boolean value) {
        return new JAXBElement<Boolean>(_WholeWordOnly_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "levelMax")
    public JAXBElement<BigInteger> createLevelMax(BigInteger value) {
        return new JAXBElement<BigInteger>(_LevelMax_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "minTermSize")
    public JAXBElement<BigInteger> createMinTermSize(BigInteger value) {
        return new JAXBElement<BigInteger>(_MinTermSize_QNAME, BigInteger.class, null, value);
    }

}
